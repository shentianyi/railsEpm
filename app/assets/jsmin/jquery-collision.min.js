!function($){function CollisionCoords(proto,containment){if(proto)if("offset"in proto){var d=proto.data("jquery-collision-coordinates");if(d)this.x1=d.x1,this.y1=d.y1,this.x2=d.x2,this.y2=d.y2;else if(containment&&containment.length&&containment.length>=4)this.x1=containment[0],this.y1=containment[1],this.x2=containment[2]+proto.outerWidth(!0),this.y2=containment[3]+proto.outerHeight(!0);else if(proto.parent().length<=0)this.x1=parseInt(proto.css("left"))||0,this.y1=parseInt(proto.css("top"))||0,this.x2=parseInt(proto.css("width"))||0,this.y2=parseInt(proto.css("height"))||0,this.x2+=this.x1,this.x2+=(parseInt(proto.css("margin-left"))||0)+(parseInt(proto.css("border-left"))||0)+(parseInt(proto.css("padding-left"))||0)+(parseInt(proto.css("padding-right"))||0)+(parseInt(proto.css("border-right"))||0)+(parseInt(proto.css("margin-right"))||0),this.y2+=this.y1,this.y2+=(parseInt(proto.css("margin-top"))||0)+(parseInt(proto.css("border-top"))||0)+(parseInt(proto.css("padding-top"))||0)+(parseInt(proto.css("padding-bottom"))||0)+(parseInt(proto.css("border-bottom"))||0)+(parseInt(proto.css("margin-bottom"))||0);else{var o=proto.offset();this.x1=o.left-(parseInt(proto.css("margin-left"))||0),this.y1=o.top-(parseInt(proto.css("margin-top"))||0),this.x2=this.x1+proto.outerWidth(!0),this.y2=this.y1+proto.outerHeight(!0)}this.proto=proto}else"x1"in proto&&(this.x1=proto.x1,this.y1=proto.y1,this.x2=proto.x2,this.y2=proto.y2,this.proto=proto);else this.x1=this.y1=this.x2=this.y2=0,this.proto=null;"dir"in proto&&(this.dir=proto.dir)}function Collision(targetNode,obstacleNode,overlapCoords,overlapType){this.target=targetNode,this.obstacle=obstacleNode,this.overlap=overlapCoords,this.overlapType=overlapType}function CollisionFactory(targets,obstacles,containment){this.targets=targets,this.obstacles=obstacles,this.collisions=null,this.cache=null,this.containment=containment?containment:null}function makeCoordsArray(j){return $(j).get().map(function(e){return new CollisionCoords($(e))})}function combineQueries(array){for(var j=$(),i=0;i<array.length;i++)j=j.add(array[i]);return j}CollisionCoords.prototype.innerContainer=function(){var clone=new CollisionCoords(this);return this.proto.css&&(clone.x1+=parseInt(this.proto.css("margin-left"))||0,clone.x1+=parseInt(this.proto.css("border-left"))||0,clone.x1+=parseInt(this.proto.css("padding-left"))||0,clone.x2-=parseInt(this.proto.css("padding-right"))||0,clone.x2-=parseInt(this.proto.css("border-right"))||0,clone.x2-=parseInt(this.proto.css("margin-right"))||0,clone.y1+=parseInt(this.proto.css("margin-top"))||0,clone.y1+=parseInt(this.proto.css("border-top"))||0,clone.y1+=parseInt(this.proto.css("padding-top"))||0,clone.y2-=parseInt(this.proto.css("padding-bottom"))||0,clone.y2-=parseInt(this.proto.css("border-bottom"))||0,clone.y2-=parseInt(this.proto.css("margin-bottom"))||0),clone},CollisionCoords.prototype.move=function(dx,dy){return this.x1+=dx,this.x2+=dx,this.y1+=dy,this.y2+=dy,this},CollisionCoords.prototype.update=function(obj){if("x1"in obj&&(this.x1=obj.x1),"x2"in obj&&(this.x1=obj.x2),"y1"in obj&&(this.x1=obj.y1),"y2"in obj&&(this.x1=obj.y2),"left"in obj){var w=this.x2-this.x1;this.x1=obj.left,this.x2=this.x1+w}if("top"in obj){var h=this.y2-this.y1;this.y1=obj.top,this.y2=this.y1+h}if("offset"in obj){var o=obj.offset();this.update(o),this.x2=this.x1+obj.width(),this.y2=this.y1+obj.height()}return"dir"in obj&&(this.x1=obj.dir),this},CollisionCoords.prototype.width=function(){return this.x2-this.x1},CollisionCoords.prototype.height=function(){return this.y2-this.y1},CollisionCoords.prototype.centerx=function(){return(this.x1+this.x2)/2},CollisionCoords.prototype.centery=function(){return(this.y1+this.y2)/2},CollisionCoords.prototype.toString=function(){return(this.proto.get?"#"+this.proto.get(0).id:"")+"["+[this.x1,this.y1,this.x2,this.y2].join(",")+"]"},CollisionCoords.EPSILON=.001,CollisionCoords.prototype.containsPoint=function(x,y,inclusive){inclusive||(inclusive=!1);var epsilon=(inclusive?-1:1)*CollisionCoords.EPSILON;return x>this.x1+epsilon&&x<this.x2-epsilon&&y>this.y1+epsilon&&y<this.y2-epsilon?!0:!1},CollisionCoords.prototype.overlaps=function(other,inclusive){var hit=this._overlaps(other,inclusive);return hit.length>0?hit:(hit=other._overlaps(this,inclusive),hit.length>0&&(hit[0].dir="Inside"==hit[0].dir?"Outside":"Outside"==hit[0].dir?"Inside":"N"==hit[0].dir?"S":"S"==hit[0].dir?"N":"W"==hit[0].dir?"E":"E"==hit[0].dir?"W":"NE"==hit[0].dir?"SW":"SW"==hit[0].dir?"NE":"SE"==hit[0].dir?"NW":"NW"==hit[0].dir?"SE":void 0),hit||[])},CollisionCoords.prototype._overlaps=function(other,inclusive){var c1=other,c2=this;inclusive||(inclusive=!1);for(var ax=c1.centerx(),ay=c1.centery(),points=[[c1.x1,c1.y1,"SE"],[c1.x2,c1.y1,"SW"],[c1.x2,c1.y2,"NW"],[c1.x1,c1.y2,"NE"],[ax,c1.y1,"S"],[c1.x2,ay,"W"],[ax,c1.y2,"N"],[c1.x1,ay,"E"],[ax,ay,void 0]],hit=null,dirs={NW:!1,N:!1,NE:!1,E:!1,SE:!1,S:!1,SW:!1,W:!1},i=0;i<points.length;i++)if(this.containsPoint(points[i][0],points[i][1],inclusive)){if(points[i][2]&&(dirs[points[i][2]]=!0),hit)continue;hit=[new CollisionCoords({x1:Math.max(c1.x1,c2.x1),y1:Math.max(c1.y1,c2.y1),x2:Math.min(c1.x2,c2.x2),y2:Math.min(c1.y2,c2.y2),dir:points[i][2]})]}return hit&&(dirs.NW&&dirs.NE&&(hit[0].dir="N"),dirs.NE&&dirs.SE&&(hit[0].dir="E"),dirs.SE&&dirs.SW&&(hit[0].dir="S"),dirs.SW&&dirs.NW&&(hit[0].dir="W"),dirs.NW&&dirs.NE&&dirs.SE&&dirs.SW&&(hit[0].dir="Outside"),dirs.NW||dirs.NE||dirs.SE||dirs.SW||dirs.N||dirs.E||dirs.S||dirs.W||(hit[0].dir="Inside")),hit||[]},CollisionCoords.prototype._protrusion=function(area,dir,list){var o=this.overlaps(new CollisionCoords(area),!1);return o.length<=0?list:(o[0].dir=dir,list.push(o[0]),list)},CollisionCoords.prototype.protrusions=function(container){var list=[],n=Number.NEGATIVE_INFINITY,p=Number.POSITIVE_INFINITY,l=container.x1,r=container.x2,t=container.y1,b=container.y2;return list=this._protrusion({x1:l,y1:n,x2:r,y2:t},"N",list),list=this._protrusion({x1:r,y1:n,x2:p,y2:t},"NE",list),list=this._protrusion({x1:r,y1:t,x2:p,y2:b},"E",list),list=this._protrusion({x1:r,y1:b,x2:p,y2:p},"SE",list),list=this._protrusion({x1:l,y1:b,x2:r,y2:p},"S",list),list=this._protrusion({x1:n,y1:b,x2:l,y2:p},"SW",list),list=this._protrusion({x1:n,y1:t,x2:l,y2:b},"W",list),list=this._protrusion({x1:n,y1:n,x2:l,y2:t},"NW",list)},Collision.prototype.distance=function(){var tc=c.target,oc=c.overlap;return Math.sqrt((tc.centerx()-oc.centerx())*(tc.centerx()-oc.centerx())+(tc.centery()-oc.centery())*(tc.centery()-oc.centery()))},CollisionFactory.prototype.getCollisions=function(overlapType){if(null!==this.collisions)return this.collisions;if(this.cache={},this.collisions=[],overlapType||(overlapType="collision"),"collision"!=overlapType&&"protrusion"!=overlapType)return[];for(var c=[],t=this.targets,o=this.obstacles,ti=0;ti<t.length;ti++)for(var tc=t[ti],oi=0;oi<o.length;oi++)for(var oc=o[oi],ol="collision"==overlapType?tc.overlaps(oc):tc.protrusions(oc.innerContainer()),oli=0;oli<ol.length;oli++)c.push(new Collision(t[ti],o[oi],ol[oli],overlapType));return this.collisions=c,c},$.fn.collision=function(selector,options){options||(options={});var mode="collision",as=null,cd=null,od=null,dd=null,rel="body";"protrusion"==options.mode&&(mode=options.mode),options.as&&(as=options.as),options.colliderData&&(cd=options.colliderData),options.obstacleData&&(od=options.obstacleData),options.directionData&&(dd=options.directionData),options.relative&&(rel=options.relative);var array,cf=new CollisionFactory(makeCoordsArray(this),makeCoordsArray(selector)),ov=cf.getCollisions(mode);return array=as?$.map(ov,function(e){var xoff=e.overlap.x1,yoff=e.overlap.y1;if(rel&&"body"!=rel){var r=$("collider"==rel?e.target.proto:"obstacle"==rel?e.obstacle.proto:rel);if(r.length>0){var roff=r.offset();xoff-=roff.left,yoff-=roff.top}}var c=$(as).offset({left:xoff,top:yoff}).width(e.overlap.width()).height(e.overlap.height());return cd&&c.data(cd,$(e.target.proto)),od&&c.data(od,$(e.obstacle.proto)),dd&&e.overlap.dir&&c.data(dd,e.overlap.dir),c}):$.map(ov,function(e){return e.obstacle.proto}),combineQueries(array)}}(jQuery);