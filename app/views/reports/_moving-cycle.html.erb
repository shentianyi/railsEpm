<div class="header" id="daily-ftq-header">
  <div class="col-sm-12" id="current-status-header" style="background: #fefefe;border-bottom: 4px solid #000">
    <div class="col-sm-3" style="text-align:center;border-right: 1px solid #ccc;">
      <label>Condition</label>

      <p style="padding-top: 5px; padding-bottom: 10px;">Working And Cycle Time Column Chart</p>
    </div>

    <div class="col-sm-3" style="text-align: center;">
      <label>Product Line</label>
      <br>
      <select id="vehicle-select" style="min-width: 150px;text-align: center;margin-top: 5px;">
        <% Department.where(is_product_line: true).each do |p| %>
            <option value="<%= p.id %>"><%= p.name %></option>
        <% end %>
      </select>
    </div>

    <div class="col-sm-3" style="padding-top: 10px;padding-bottom:10px;border-left: 1px solid #ccc; display: flex;border-right: 1px solid #ccc;">
      <div style="margin-top: 10px;">
        <input type="number" style="width: 60px;height: 20px;" class="RecentTime" step="5">
        <label>Min</label>
      </div>
      <button class="btn btn-primary RecentTimeBtn" style="width: 60px;">Search</button>
    </div>

    <div class="col-sm-3" style="text-align: center;">
      <label>Current time</label>
      <p id="current-clock" style="font-size: 20px;font-weight: bold;margin-top: 5px;"></p>
    </div>
  </div>
</div>

<div class="clearfix chart-interval-alternate" id="chart-interval-alternate">
  <ul class="pull-right control-chart-interval-group">
    <li interval="100" style="color: black;">
      <a>D</a>
    </li>
    <li interval="300">
      <a>M</a>
    </li>
    <li interval="400">
      <a>Qr</a>
    </li>
    <li interval="500">
      <a>Y</a>
    </li>
  </ul>
</div>

<!--chart-->
<div id="charts_containers" style="margin-top: 60px;min-height:300px;"></div>

<hr class="bottom-hr" style="border-bottom: 4px solid #000;">

<!--table-->
<div id="data_chartcontainer" class="data_container" style="margin-top: 20px;">
  <table class="table table-bordered table-hover">
    <thead>
    <tr class="thead-tr">
    </tr>
    </thead>
    <tbody class="tbody-tr">
    <tr class="tbody-target-min"></tr>
    <tr class="tbody-moving-time"></tr>
    <tr class="tbody-target-max"></tr>
    <tr class="tbody-cycle-time"></tr>
    </tbody>
  </table>
</div>

<style>
  .table > thead > tr > th, .table > tbody > tr > td {
    text-align: center;
    background: white;
  }
</style>

<script type="text/javascript">
  var ChartStyle = {
    ChartBackground: "#ffffff",
    label_font_color: "black",
    tooltips_font_color: "black"
  };

  $('.RecentTime').keydown(function (e) {
    var ev = window.event || e;
    if (ev.keyCode == 13) {
      RecentTimeSearch();
    }
  });

  $('.RecentTimeBtn').click(function () {
    RecentTimeSearch();
  });

  function RecentTimeSearch() {
    var productLine = $('#vehicle-select').val();
    var datatype = 100;
    var now = new Date();
    var end_time = now.format("yyyy-MM-dd hh:mm:ss");
    var start_time = startRecentTime();
    loadChartData(productLine, datatype, start_time, end_time);
  }

  var IsLoading = false;

  $(document).ready(function () {
    if ($('#from_ipad').val()) {
      var IpadHeight = document.documentElement.clientHeight;
      $('#current-status-header').css({
        paddingTop: "10px",
        background: '#4682B4',
        color: "white",
        borderBottom: "4px solid white"
      });
      $('#vehicle-select').css({
        color: "black"
      });
      $('.bottom-hr').css({display: "none"});
      $('#report-content').css({
        height: (IpadHeight + 125) + 'px',
        overflow: 'hidden'
      });
      $('.control-chart-interval-group').parent().css({display: "none"});
      $('#data_chartcontainer').css({display: "none"});
      $('#charts_containers').css({height: (IpadHeight - 25) + "px"});
      $('.RecentTime').css({
        color: "black"
      });
//      设置 图标 颜色
      ChartStyle.ChartBackground = "#4682B4";
      ChartStyle.label_font_color = "white";

    } else {
      var ReportMenuStatus = document.getElementById('report-menu').style.display;

      if (ReportMenuStatus == 'none') {
        $('#data_chartcontainer').css({width: (ClientWidth - 20) + 'px', overflowX: 'auto'});
      } else {
        $('#data_chartcontainer').css({width: (ClientWidth - 230) + 'px', overflowX: 'auto'});
      }
    }

    $('.control-chart-interval-group li').each(function () {
      $(this).click(function () {
        $('.control-chart-interval-group li').css({color: 'black', opacity: '0.3'});
        $('.control-chart-interval-group li').attr('datatype', 'false');

        if ($('#from_ipad').val()) {
          show_loading(70, 0, 0, 0);
        } else {
          if (ReportMenuStatus == 'none') {
            show_loading(70, 0, 0, 0);
          } else {
            show_loading(70, 0, 0, 230);
          }
        }

        $(this).css({opacity: '1'});
        $(this).attr('datatype', 'true');

        var Choose_Interval_Code = $(this).attr('interval');
        var ProductLine = $('#vehicle-select').val();
        var now = new Date();
        var end_time = now.format("yyyy-MM-dd hh:mm:ss");
        var start_time = startRecentTime();
        $.ajax({
          url: '/departments/cycle_and_moving_kpi_data',
          type: 'get',
          data: {
            interval: Choose_Interval_Code,
            product_line: ProductLine,
            start_time: start_time,
            end_time: end_time
          },
          success: function (data) {
            remove_loading();
          },
          error: function () {
            console.log("Error");
          }
        });
      });
    });

    var ClientHeight = $(document).height();
    var ClientWidth = document.documentElement.clientWidth;

    $('#report-content').css({
      height: (ClientHeight - 70) + 'px',
      overflow: 'auto'
    });
    if (localStorage.box_msg) {
      var box_msg = localStorage.box_msg;
      var productLine = box_msg.split('_')[1];
      var datatype = box_msg.split('_')[3];

      $('#vehicle-select option').each(function () {
        if (($(this).attr('value')) == productLine) {
          $(this).attr('selected', 'true');
        }
      });
      var now = new Date();
      var end_time = now.format("yyyy-MM-dd hh:mm:ss");
      var start_time = startRecentTime();
      loadChartData(productLine, datatype, start_time, end_time);
    } else {
      var productLine = $('#vehicle-select').val();
      var datatype = 100;
      var now = new Date();
      var end_time = now.format("yyyy-MM-dd hh:mm:ss");
      var start_time = startRecentTime();
      loadChartData(productLine, datatype, start_time, end_time);
    }
  });

  $("#vehicle-select").change(function () {
    var productLine = $('#vehicle-select').val();
    localStorage.box_msg = "Line_" + productLine + "_interval_100" + "_box_0";
    localStorage.recent_time = $('.RecentTime').val();
    var now = new Date();
    var end_time = now.format("yyyy-MM-dd hh:mm:ss");
    var start_time = startRecentTime();
    loadChartData(productLine, 100, start_time, end_time);
  });

  /*时间刷新*/
  window.setInterval(function () {
    startTime();
  }, 500);

  setInterval(function () {
    if (!IsLoading) {
      var IntervalProductLine = $('#vehicle-select').val();
      var IntervalDataType;

      $('.control-chart-interval-group li').each(function () {
        if ($(this).datatype == "true") {
          IntervalDataType = $(this).attr('interval');
        } else {
          IntervalDataType = 100;
        }
      });
      var now = new Date();
      var end_time = now.format("yyyy-MM-dd hh:mm:ss");
      var start_time = startRecentTime();
      loadChartData(IntervalProductLine, IntervalDataType, start_time, end_time);
    }
  }, 120000);

  function loadChartData(productLine, chartdatatype, start_time, end_time) {
    /*清空*/
    $('#charts_containers').children().remove();
    $('.thead-tr').children().remove();
    $('.tbody-moving-time').children().remove();
    $('.tbody-target-max').children().remove();
    $('.tbody-cycle-time').children().remove();

    $('.control-chart-interval-group li').each(function () {
      if ($(this).attr('datatype') == 'true') {
        chartdatatype = $(this).attr('interval');
      }
    });

    /*ajax request*/
    GetDataFun(productLine, chartdatatype, start_time, end_time);
  }

  function GetDataFun(productLine, chartdatatype, start_time, end_time) {
    if (productLine == null || chartdatatype == null || start_time == null || end_time == null) return;

    IsLoading = true;
    if ($('#from_ipad').val()) {
      show_loading(70, 0, 0, 0);
    } else {
      var ReportMenuStatus = document.getElementById('report-menu').style.display;
      if (ReportMenuStatus == 'none') {
        show_loading(70, 0, 0, 0);
      } else {
        show_loading(70, 0, 0, 230);
      }
    }

    $.ajax({
      url: '/departments/cycle_and_moving_kpi_data',
      type: 'get',
      data: {
        product_line: productLine,
        interval: chartdatatype,
        start_time: start_time,
        end_time: end_time
      },
      success: function (data) {
        var ajaxData = data;

        var yAxis_value = new Array();
        var charts_moving_time = new Array();
        var charts_cycle_time = new Array();
        var charts_target_max = new Array();
        var charts_target_min = new Array();

        $('<th>Station</th>').appendTo('.thead-tr').ready(function () {
        });

        $('<td>CycleTime</td>').appendTo('.tbody-cycle-time').ready(function () {
        });

        $('<td>MovingTime</td>').appendTo('.tbody-moving-time').ready(function () {
        });

        $('<td>Target Max</td>').appendTo('.tbody-target-max').ready(function () {
        });
        /*table*/
        for (var i = 0; i < ajaxData.length; i++) {
          $('<th>' + ajaxData[i].name + '</th>').appendTo('.thead-tr').ready(function () {
          });

          $('<td>' + ajaxData[i].target_max + '</td>').appendTo('.tbody-target-max').ready(function () {
          });

          yAxis_value.push(ajaxData[i].name + "#" + ajaxData[i].code + "#" + ajaxData[i].cycle_count + "#" + ajaxData[i].moving_count);
          charts_target_max.push(ajaxData[i].target_max);
          charts_target_min.push(ajaxData[i].target_min);

          if (ajaxData[i].cycle_time > ajaxData[i].target_max) {
            charts_cycle_time.push({id: ajaxData[i].id, color: '#ff0000', y: ajaxData[i].cycle_time});
            $('<td style="background:#ff0000;">' + ajaxData[i].cycle_time + '</td>').appendTo('.tbody-cycle-time').ready(function () {
            });
          } else if (ajaxData[i].cycle_time < ajaxData[i].target_min) {
            charts_cycle_time.push({id: ajaxData[i].id, color: '#00FF7F', y: ajaxData[i].cycle_time});
            $('<td style="background:white;">' + ajaxData[i].cycle_time + '</td>').appendTo('.tbody-cycle-time').ready(function () {
            });
          } else {
            charts_cycle_time.push({id: ajaxData[i].id, color: '#00FF7F', y: ajaxData[i].cycle_time});
            $('<td style="background:#00FF7F;">' + ajaxData[i].cycle_time + '</td>').appendTo('.tbody-cycle-time').ready(function () {
            });
          }

          if (ajaxData[i].moving_time > ajaxData[i].target_max) {
            charts_moving_time.push({id: ajaxData[i].id, color: '#ff0000', y: ajaxData[i].moving_time});
            $('<td style="background:#ff0000;">' + ajaxData[i].moving_time + '</td>').appendTo('.tbody-moving-time').ready(function () {
            });
          } else if (ajaxData[i].moving_time < ajaxData[i].target_min) {
            charts_moving_time.push({id: ajaxData[i].id, color: '#00EEEE', y: ajaxData[i].moving_time});
            $('<td style="background:white;">' + ajaxData[i].moving_time + '</td>').appendTo('.tbody-moving-time').ready(function () {
            });
          } else {
            charts_moving_time.push({id: ajaxData[i].id, color: '#00EEEE', y: ajaxData[i].moving_time});
            $('<td style="background: #00EEEE;">' + ajaxData[i].moving_time + '</td>').appendTo('.tbody-moving-time').ready(function () {
            });
          }
        }

        /*chart*/
        var chart = $('#charts_containers').highcharts({
          chart: {
            backgroundColor: ChartStyle.ChartBackground
          },
          title: {
            text: 'Moving & Cycle Time', x: -20, //center
            style: {
              color: ChartStyle.label_font_color
            }
          },
          credits: {
            enabled: false
          },
          colors: ['#8DB6CD', '#FFA500', '#CD8162', '#24CBE5', '#64E572', '#FF9655',
            '#FFF263', '#6AF9C4'],
          xAxis: {
            categories: yAxis_value,
            labels: {
              formatter: function () {
                return this.value.split("#")[1];
              },
              style: {
                color: ChartStyle.label_font_color
              }
            }
          },
          yAxis: {
            title: {
              text: 'Time(s)',
              style: {
                color: ChartStyle.label_font_color
              }
            },
            plotLines: [{value: 0, width: 1, color: ChartStyle.label_font_color}],
            labels: {
              style: {
                color: ChartStyle.label_font_color
              }
            }
          },
          tooltip: {
            valueSuffix: 's',
            formatter: function () {
              if (this.series.name == "moving-time") {
                return '<span><b>' + this.x.split('#')[0] +
                    '</b><br/><b>' + this.series.name + ':</b><b>' + this.y + ' s</b><br/><b>TotalCount:</b><b>' + this.x.split('#')[3] + '</b><span>';
              } else if (this.series.name == "cycle-time") {
                return '<span><b>' + this.x.split('#')[0] +
                    '</b><br/><b>' + this.series.name + ':</b><b>' + this.y + ' s</b><br/><b>TotalCount:</b><b>' + this.x.split('#')[2] + '</b><span>';
              }
            },
            style: {
              color: ChartStyle.tooltips_font_color
            }
          },
          legend: {
            layout: 'horizontal',
            align: 'center',
            verticalAlign: 'bottom',
            borderHeight: 0,
            itemStyle: {
              color: ChartStyle.label_font_color
            }
          },
          plotOptions: {
            column: {
              dataLabels: {
                enabled: true,
                color: ChartStyle.label_font_color
              },
              color: ChartStyle.label_font_color,
              borderWidth: '0'
            }
          },
          series: [
            {
              type: 'column',
              name: 'moving-time',
              data: charts_moving_time,
              color: '#00EEEE'
            }, {
              type: 'column',
              name: 'cycle-time',
              data: charts_cycle_time,
              color: '#00FF7F'
            },
            {
              name: 'TargetMax',
              data: charts_target_max,
              color: '#FF7F00'
            }
          ]
        });

        remove_loading();
        IsLoading = false;
      },
      error: function () {
        console.log("something error");
        remove_loading();
      }
    });
  }
</script>